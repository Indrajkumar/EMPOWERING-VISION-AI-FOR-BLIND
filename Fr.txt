
# Import OpenCV2 for image processing
import cv2
import RPi.GPIO as GPIO
# Import numpy for matrices calculations
import numpy as np
import time
import datetime
from gtts import gTTS
import os

# Create Local Binary Patterns Histograms for face recognization
#recognizer = cv2.face.LBPHFaceRecognizer_create() 
recognizer = cv2.face.LBPHFaceRecognizer_create()

# Load the trained mode
recognizer.read('trainer/trainer.yml')

# Load prebuilt model for Frontal Face
cascadePath = "haarcascade_frontalface_default.xml"

# Create classifier from prebuilt model
faceCascade = cv2.CascadeClassifier(cascadePath);

# Set the font style
font = cv2.FONT_HERSHEY_SIMPLEX
cam=cv2.VideoCapture(0)

# Local variable Declaration
lecture=0
count=0
count2=0
count3=0
count4=0
sample=0

while True:

    now = datetime.datetime.now()
    ret, image_frame =cam.read()
    # Convert the captured frame into grayscale
    gray = cv2.cvtColor(image_frame,cv2.COLOR_BGR2GRAY)
    # Get all face from the video frame
    faces = faceCascade.detectMultiScale(gray, 1.2,5)

    # For each face in faces
    for(x,y,w,h) in faces:

        # Create rectangle around the face
        cv2.rectangle(image_frame, (x-20,y-20), (x+w+20,y+h+20), (0,255,0), 4)

        # Recognize the face belongs to which ID
        Id,i= recognizer.predict(gray[y:y+h,x:x+w])

        print(i)
        print(Id)

        if i < 65:
            sample=sample+1                         
            # Check the ID if exist 
            if(Id == 1):
             
                Id = "ELIAS"
                print('ELIAS')
                lecture=1
                lag = 'en'
                myobj = gTTS(text=Id, lang=lag, slow =False)
                myobj.save("name.mp3")
                os.system("mpg321 name.mp3")
            if(Id == 2):
             
                Id = "AKSHAY"
                print('AKSHAY')
                lecture=1
                lag = 'en'
                myobj = gTTS(text=Id, lang=lag, slow =False)
                myobj.save("name.mp3")
                os.system("mpg321 name.mp3")
        else:
            count=count+1

            if count > 10:
                count=0
                Id = "Unknown"  
                print(Id)
              
                cv2.imwrite("frame.png",image_frame)           

        # Put text describe who is in the picture
        cv2.rectangle(image_frame, (x-22,y-90), (x+w+22, y-22), (0,255,0), -1)
        cv2.putText(image_frame, str(Id), (x,y-40), font, 2, (255,255,255), 3)

    # Display the video frame with the bounded rectangle
    cv2.imshow('im',image_frame)

    # If 'q' is pressed, close program
    if cv2.waitKey(5) & 0xFF == ord('q'):
        break
        
# Close all windows
cv2.destroyAllWindows()


